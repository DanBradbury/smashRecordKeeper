<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>character_list = ds_list_create();
/*ds_list_add(character_list, "Mario", "DK", "Jiggly", "Wii Fit", "Duck hunt", "Mega Man", "Fox", "Robin");*/
ds_list_add(character_list,
  "Bayonetta",
  "Bowser",
  "Bowser Jr.",
  "Captain Falcon",
  "Chrom",
  "Cloud",
  "Corrin",
  "Daisy",
  "Dark Pit",
  "Dark Samus",
  "Diddy Kong",
  "DK",
  "Dr. Mario",
  "Duck Hunt",
  "Falco",
  "Fox",
  "Ganondorf",
  "Greninja",
  "Ice Climbers",
  "Ike",
  "Inkling",
  "Incineroar",
  "Isabelle",
  "Jigglypuff",
  "Ken",
  "King Dedede",
  "King K.Rule",
  "Kirby",
  "Link",
  "Little Mac",
  "Lucario",
  "Lucas",
  "Lucina",
  "Luigi",
  "Mario",
  "Marth",
  "Mega Man",
  "Meta Knight",
  "Mewtwo",
  "Mii Brawler",
  "Mii Gunner",
  "Mii Fighter",
  "Mr Game &amp; Watch",
  "Ness",
  "Captain Olimar",
  "Pac-Man",
  "Palutena",
  "Peach",
  "Pichu",
  "Pikachu",
  "Piranha Plant",
  "Pit",
  "Pokemon Trainer",
  "Richter",
  "Ridley",
  "R.O.B.",
  "Robin",
  "Rosalina",
  "Roy",
  "Ryu",
  "Samus",
  "Sheik",
  "Shulk",
  "Simon",
  "Snake",
  "Sonic",
  "Toon Link",
  "Villager",
  "Wario",
  "Wii Fit Trainer",
  "Wolf",
  "Yoshi",
  "Young Link",
  "Zelda",
  "Zero Suit Samus"
);

event_triggered = false;
event_name = "none";
current_character = 0;
/*characters = pack("Mario", "DK", "Jiggly", "Wii Fit", "Duck hunt");*/
/*characters = pack("Mario");*/
characters = ds_list_create();
ds_list_add(characters, "Mario");
/*num_characters = array_length_1d(characters);*/
num_characters = ds_list_size(characters);

/*session_records = array_create(num_characters);*/
session_records = ds_list_create();
for(var i=0;i&lt;num_characters;i++) {
    /*session_records[i] = pack(0,0, i);*/
    ds_list_add(session_records, pack(0,0, i));
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var t = session_records[current_character];*/
var t = ds_list_find_value(session_records, current_character);
switch(event_name){
  case 'win':
    /*session_records[current_character] = pack(t[0]+1, t[1], t[2]);*/
    ds_list_replace(session_records, current_character, pack(t[0]+1, t[1], t[2]));
    break;
  case 'loss':
    /*session_records[current_character] = pack(t[0], t[1]+1, t[2]);*/
    ds_list_replace(session_records, current_character, pack(t[0], t[1]+1, t[2]));
    break;

}
event_triggered = false;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
if(!event_triggered &amp;&amp; keyboard_check_released(vk_up)) {
  event_name = 'win';
  event_triggered = true;
  alarm[0] = 2;
}
if(!event_triggered &amp;&amp; keyboard_check_released(vk_down)) {
  event_name = 'loss';
  event_triggered = true;
  alarm[0] = 2;
}

if(!event_triggered &amp;&amp; keyboard_check_released(vk_right)) {
  //scr_change_character
  if(current_character+1 &gt;= num_characters) {
    current_character = 0;
  } else {
    current_character += 1;
  }
}

if(!event_triggered &amp;&amp; keyboard_check_released(vk_left)) {
  //scr_change_character
  if(current_character-1 &lt; 0) {
    current_character = num_characters-1;
  } else {
    current_character -= 1;
  }
}
if(keyboard_check_released(ord('R'))) {
  //remove current character
  ds_list_delete(characters, current_character);
  ds_list_delete(session_records, current_character);
  num_characters--;
  current_character = 0;
}

if(!instance_exists(obj_character_select) &amp;&amp; !event_triggered &amp;&amp; keyboard_check_released(ord('A'))) {
  /*instance_create(0,0, obj_character_select);*/
  instance_create(0,0, obj_picture_character_select);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
draw_set_font(font_default);
for(var i=0;i&lt;num_characters;i++) {
  /*var t = session_records[i];*/
  var t = ds_list_find_value(session_records, i);
  draw_sprite(spr_portraits, t[2], 10,10+(50*i));
  draw_set_color(c_red);
  draw_text(60,3+(50*i),string(t[0])+" - "+string(t[1]));
  if(i==current_character) {
    draw_set_color(c_yellow);
    draw_circle(3,15+(50*i), 3, false);
  }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
