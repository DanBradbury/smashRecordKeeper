<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>character_list = make_character_list();
character_count = ds_list_size(character_list);
selected_item = array_create(76);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
if(keyboard_check_pressed(vk_escape)) {
  instance_destroy();
}

for(var i=0;i&lt;character_count-1;i++) {
  sprite_x = 0+((i)*43);
  sprite_y = 0;

  if(i&gt;=66) {
    sprite_x = 0+((i-66)*43);
    sprite_y = 75;
  } else if(i&gt;=44) {
    sprite_x = 0+((i-44)*43);
    sprite_y = 50;
  } else if(i&gt;=22) {
    sprite_x = 0+((i-22)*43);
    sprite_y = 25;
  }

  if(mouse_x &gt;= sprite_x &amp;&amp; mouse_x &lt;= 43+sprite_x &amp;&amp; mouse_y &gt;= sprite_y &amp;&amp; mouse_y &lt;= sprite_y+24) {
    selected_item[i] = 1;
    if(mouse_check_button_pressed(mb_left)) {
      var a = add_character_to_list(ds_list_find_value(character_list, i));
      instance_destroy();
    }
  } else {
    selected_item[i] = 0;
  }
}




















































</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
draw_set_color(c_black);
draw_rectangle(0,0,room_width,room_height, false);
/*for(var i=0;i&lt;22;i++) {*/
  /*sprite_x = 0+(i*43);*/
  /*sprite_y = 0;*/
  /*draw_sprite(spr_portraits, i, sprite_x, sprite_y);*/
  /*if(selected_item[i] == 1) {*/
    /*draw_set_color(c_red);*/
    /*draw_rectangle(sprite_x, sprite_y, sprite_x+43, sprite_y+24, true);*/
  /*}*/
/*}*/
/*for(var i=22;i&lt;44;i++) {*/
  /*sprite_x = 0+((i-22)*43);*/
  /*sprite_y = 25;*/

  /*draw_sprite(spr_portraits, i, sprite_x, sprite_y);*/

  /*if(selected_item[i] == 1) {*/
    /*draw_set_color(c_red);*/
    /*draw_rectangle(sprite_x, sprite_y, sprite_x+43, sprite_y+24, true);*/
  /*}*/
/*}*/

/*for(var i=44;i&lt;66;i++) {*/
  /*sprite_x = 0+((i-44)*43);*/
  /*sprite_y = 50;*/
  /*draw_sprite(spr_portraits, i, sprite_x, sprite_y);*/
  /*if(selected_item[i] == 1) {*/
    /*draw_set_color(c_red);*/
    /*draw_rectangle(sprite_x, sprite_y, sprite_x+43, sprite_y+24, true);*/
  /*}*/
/*}*/

/*for(var i=66;i&lt;75;i++) {*/
  /*sprite_x = 0+((i-66)*43);*/
  /*sprite_y = 75;*/
  /*draw_sprite(spr_portraits, i, sprite_x, sprite_y);*/
  /*if(selected_item[i] == 1) {*/
    /*draw_set_color(c_red);*/
    /*draw_rectangle(sprite_x, sprite_y, sprite_x+43, sprite_y+24, true);*/
  /*}*/
/*}*/

for(var i=0;i&lt;character_count-1;i++) {
  sprite_x = 0+((i)*43);
  sprite_y = 0;
  if(i&gt;=66) {
    sprite_x = 0+((i-66)*43);
    sprite_y = 75;
  } else if(i&gt;=44) {
    sprite_x = 0+((i-44)*43);
    sprite_y = 50;
  } else if(i&gt;=22) {
    sprite_x = 0+((i-22)*43);
    sprite_y = 25;
  }
  draw_sprite(spr_portraits, determine_sprite_index(ds_list_find_value(character_list, i)), sprite_x, sprite_y);
  if(selected_item[i] == 1) {
    draw_set_color(c_red);
    draw_rectangle(sprite_x, sprite_y, sprite_x+43, sprite_y+24, true);
  }
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
